// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryManagement.Data;

namespace SalaryManagement.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210630130617_herewego")]
    partial class herewego
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("SalaryManagement.Entities.Appraisal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Percent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Appraisals");
                });

            modelBuilder.Entity("SalaryManagement.Entities.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bonuss");
                });

            modelBuilder.Entity("SalaryManagement.Entities.Restrictions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedHoliday")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedLates")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HolidayDeduction")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Restrictionss");
                });

            modelBuilder.Entity("SalaryManagement.Entities.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SalaryBreakdownId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SalaryHistoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SalaryBreakdownId");

                    b.HasIndex("SalaryHistoryId");

                    b.ToTable("Salarys");
                });

            modelBuilder.Entity("SalaryManagement.Entities.SalaryBreakdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("DaySalary")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SalaryBreakdowns");
                });

            modelBuilder.Entity("SalaryManagement.Entities.SalaryByMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Deduction")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Month")
                        .HasColumnType("TEXT");

                    b.Property<int>("NetAmount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SalaryHistoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SalaryHistoryId");

                    b.ToTable("SalaryByMonths");
                });

            modelBuilder.Entity("SalaryManagement.Entities.SalaryDeduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DeductSalary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SalaryDeductions");
                });

            modelBuilder.Entity("SalaryManagement.Entities.SalaryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SalaryHistorys");
                });

            modelBuilder.Entity("SalaryManagement.Entities.Salary", b =>
                {
                    b.HasOne("SalaryManagement.Entities.SalaryBreakdown", "SalaryBreakdown")
                        .WithMany()
                        .HasForeignKey("SalaryBreakdownId");

                    b.HasOne("SalaryManagement.Entities.SalaryHistory", "SalaryHistory")
                        .WithMany()
                        .HasForeignKey("SalaryHistoryId");

                    b.Navigation("SalaryBreakdown");

                    b.Navigation("SalaryHistory");
                });

            modelBuilder.Entity("SalaryManagement.Entities.SalaryByMonth", b =>
                {
                    b.HasOne("SalaryManagement.Entities.SalaryHistory", "SalarHistory")
                        .WithMany("SalaryByMonth")
                        .HasForeignKey("SalaryHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalarHistory");
                });

            modelBuilder.Entity("SalaryManagement.Entities.SalaryHistory", b =>
                {
                    b.Navigation("SalaryByMonth");
                });
#pragma warning restore 612, 618
        }
    }
}
